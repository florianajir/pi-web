# --- General Configuration ---
HOST_NAME=pi.lan
TIMEZONE=Europe/Paris
EMAIL=admin@example.com
USER=admin
PASSWORD=admin
PUID=1000
PGID=1000

# --- Network Configuration ---
ALLOW_IP_RANGES="127.0.0.1/32,192.168.1.0/24,17.30.11.0/24"

# Pi-hole macvlan IP (appears as separate device on LAN; used for DHCP/DNS service)
PIHOLE_IP=192.168.1.29
# Host Raspberry Pi LAN IP (Traefik publishes 80/443 here; wildcard DNS should resolve to this)
HOST_IP=192.168.1.30

# --- LAN Configuration ---
LAN_PARENT=eth0
LAN_SUBNET=192.168.1.0/24
LAN_GATEWAY=192.168.1.1

# --- DHCP Configuration ---
# DHCP range served by Pi-hole (must be inside LAN_SUBNET and not overlap static reservations)
DHCP_ACTIVE=false
DHCP_START=192.168.1.100
DHCP_END=192.168.1.150
DHCP_ROUTER=192.168.1.1
DHCP_LEASE_TIME=24

# --- Nextcloud Configuration ---
NEXTCLOUD_DB_NAME=nextcloud
NEXTCLOUD_DB_USER=piweb
NEXTCLOUD_DB_PASSWORD=piweb
NEXTCLOUD_DB_ROOT_PASSWORD=piweb-root
NEXTCLOUD_TRUSTED_PROXIES=172.30.11.0/24

# --- WireGuard Configuration ---
WIREGUARD_SERVER_URL=pi.lan
WIREGUARD_SERVER_PORT=51820
# Initial number of peers auto-generated on first container start.
# After bootstrap, you can manually create additional peers inside the container (see README hygiene section).
WIREGUARD_PEERS=1
# Match Pi-hole LAN IP to route VPN DNS through the resolver
WIREGUARD_PEER_DNS=192.168.1.29
WIREGUARD_INTERNAL_SUBNET=10.13.13.0/24
WIREGUARD_ALLOWED_IPS=0.0.0.0/0,::/0
